---
name: CI

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub Actions Documentation
# https://docs.github.com/en/github-ae@latest/actions

# Reusing workflows
# https://docs.github.com/en/actions/using-workflows/reusing-workflows

on:
  schedule:
    # Run daily at 9:15 AM UTC (nightly builds)
    # Publish "nightly" build as release
    - cron: '15 9 * * *'
    # Run once a week on Mondays at 6:15 AM UTC (rebuild latest)
    - cron: '15 6 * * MON'
  push:
    # Publish semver tags as releases (e.g., 1.0.0)
    tags: ['*.*.*']
  # or on button click
  workflow_dispatch:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      tags:
        description: Image tags (whitespace-separated)
        required: true
        type: string
      latest:
        # The latest tag is automatically handled through the new tag/release
        # event. Set for conditionally tagging with the latest tag.
        description: For conditionally tagging with the latest tag
        required: false
        type: boolean
      ref:
        # The branch, tag or SHA to checkout in builds. If empty, check out
        # the repository that triggered the workflow.
        description:
          The branch, tag or SHA to checkout (empty for current branch)
        required: false
        type: string

# Save computation power by stopping obsolete jobs for the current workflow
# https://docs.github.com/en/enterprise-cloud@latest/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Calling a reusable workflow
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  setup-matrix:
    uses: ./.github/workflows/read-matrix.yml
    with:
      matrix-path: docker/build/matrix.json

  setup-inputs:
    runs-on: ubuntu-latest
    # Map the workflow outputs to job outputs
    outputs:
      tags: ${{ steps.set-inputs.outputs.tags }}
      latest: ${{ steps.set-inputs.outputs.latest }}
      ref: ${{ steps.set-inputs.outputs.ref }}
    needs:
      - setup-matrix

    steps:
      # Checkout a repository, so the workflow can access it
      # https://github.com/actions/checkout
      - 
        name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: '${{ inputs.ref }}'

      # Setting output parameters between steps, jobs and/or workflows
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - 
        name: Prepare inputs
        id: set-inputs
        run: |

          # Check whether it is a schedule to rebuild image with latest tag
          CRON_EVENT="${{ github.event.schedule }}"
          if [[ ${CRON_EVENT} == '15 6 * * MON' ]];
          then
            LATEST="${{ needs.setup-matrix.outputs.default_release }}"

            # Check for latest tag
            git show-ref --tags --verify --quiet "refs/tags/${LATEST}" 
            exit_code=$?
            echo "${exit_code}"
            if [[ $exit_code -eq 0 ]]; then
              echo "Tag ${TAG} exists"
            else
              echo "Tag ${TAG} does not exist"
            fi

            # Set alternative tag
            SHORT_VERSION=${LATEST%.*}
            TAGS="${LATEST} ${SHORT_VERSION}"
            echo "${TAGS}"
            echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"

            echo 'true'
            echo "latest=true" >> "$GITHUB_OUTPUT"

            echo "${LATEST}"
            echo "ref=${LATEST}" >> "$GITHUB_OUTPUT"
          # Otherwise, this is the regular path
          else
            TAGS="${{ inputs.tags }}"
            if [[ -z "${TAGS}" ]];
            then
              TAGS="${GITHUB_REF#refs/*/}"
            fi
            echo "$TAGS"
            echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"

            # Check for latest tag
            ret_code=$(git show-ref --tags 
                                     --verify
                                     --quiet "refs/tags/${LATEST}" || echo 1)
            echo "${ret_code}"
            if [[ -z "${ret_code}" ]];
            then
              echo "Tag ${LATEST} exists"
            else
              echo "Tag ${LATEST} does not exist"

              # Create a release/tag
              gh release create ${LATEST} \
                --title "${LATEST} (beta)" \
                --notes "this is a beta release" \
                # --prerelease
              # git tag -a ${LATEST} -m \
              #   "Release of version ${LATEST} (automatically generated)"
              # git push origin ${LATEST}
            fi

            echo "${{ inputs.latest }}"
            echo "latest=${{ inputs.latest == true }}" >> "$GITHUB_OUTPUT"

            echo "${{ inputs.ref }}"
            echo "ref=${{ inputs.ref }}" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-base:
    uses: ./.github/workflows/build-images.yml
    with:
      images: '[ "boca-base" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      default_parent: ${{ needs.setup-matrix.outputs.default_parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tags: ${{ needs.setup-inputs.outputs.tags }}
      latest: ${{ needs.setup-inputs.outputs.latest == 'true' }}
      ref: ${{ needs.setup-inputs.outputs.ref }}
    needs:
      - setup-matrix
      - setup-inputs

  build-web:
    uses: ./.github/workflows/build-images.yml
    with:
      images: '[ "boca-web" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      default_parent: ${{ needs.setup-matrix.outputs.default_parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tags: ${{ needs.setup-inputs.outputs.tags }}
      latest: ${{ needs.setup-inputs.outputs.latest == 'true' }}
      ref: ${{ needs.setup-inputs.outputs.ref }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-base

  build-jail:
    uses: ./.github/workflows/build-images.yml
    with:
      images: '[ "boca-jail" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      default_parent: ${{ needs.setup-matrix.outputs.default_parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tags: ${{ needs.setup-inputs.outputs.tags }}
      latest: ${{ needs.setup-inputs.outputs.latest == 'true' }}
      ref: ${{ needs.setup-inputs.outputs.ref }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-base

  lint-base:
    uses: ./.github/workflows/lint-images.yml
    with:
      images: '[ "boca-base" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-base

  scan-base:
    uses: ./.github/workflows/scan-images.yml
    with:
      images: '[ "boca-base" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-base

  lint-web:
    uses: ./.github/workflows/lint-images.yml
    with:
      images: '[ "boca-web" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-web
    
  scan-web:
    uses: ./.github/workflows/scan-images.yml
    with:
      images: '[ "boca-web" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-web

  lint-jail:
    uses: ./.github/workflows/lint-images.yml
    with:
      images: '[ "boca-jail" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-jail
    
  scan-jail:
    uses: ./.github/workflows/scan-images.yml
    with:
      images: '[ "boca-jail" ]'
      parents: ${{ needs.setup-matrix.outputs.parent }}
      platforms: ${{ needs.setup-matrix.outputs.platform }}
      tag: ${{ needs.setup-inputs.outputs.tags }}
    needs:
      - setup-matrix
      - setup-inputs
      - build-jail
