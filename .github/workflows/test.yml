---
name: test

on:
  workflow_dispatch:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      attempt_limit:
        description: Set number of retries if workflow fails (default is 1)
        required: false
        type: number
      attempt_delay:
        description: Set delay between retries in seconds (default is 30)
        required: false
        type: number

jobs:
  fake-job:
    runs-on: ubuntu-latest

    steps:
      - 
        name: Fake step
        id: set-inputs
        run: |

          echo "about to fail"
          exit 1

  # Restart the scheduled workflow when it failed
  # https://www.eliostruyf.com/restart-github-actions-workflow-failed/
  retry:
    runs-on: ubuntu-latest
    if: |
      failure()
    needs:
      - fake-job

    steps:

      - 
        name: Retry the workflow
        run: |

          ATTEMPT=$((${{ inputs.attempt_limit }}))
          echo $ATTEMPT
          if [[ "$ATTEMPT" -le "0" ]];
          then
            exit 1
          fi
          ATTEMPT=$((ATTEMPT-1))
          echo $ATTEMPT

          # Wait before restarting
          DELAY=$((${{ inputs.attempt_delay }}))
          echo $DELAY
          # sleep $DELAY

          WORKFLOWS_URL="/repos/${{ github.repository }}/"
          WORKFLOWS_URL+="actions/workflows"
          echo "$WORKFLOWS_URL"

          # List repository workflows
          # https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#list-repository-workflows
          WORKFLOWS_JSON=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" ${WORKFLOWS_URL} || echo "")
          echo "$WORKFLOWS_JSON"

          # If list of workflows does not exist just fail
          if [[ -z "${WORKFLOWS_JSON}" ]];
          then
            exit 1
          fi

          # Get id of current workflow
          WORKFLOW_ID=`echo $WORKFLOWS_JSON | \
            jq --arg var "${{ github.workflow }}" \
              '.workflows[] | select(.name == $var) | .id'`
          echo $WORKFLOW_ID

          BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo $BRANCH

          URL="https://api.github.com/repos/${{ github.repository }}/\
          actions/workflows/$WORKFLOW_ID/dispatches"
          echo $URL

          JSON_STRING=$( jq -n \
            --arg limit $ATTEMPT \
            --arg delay $DELAY \
            '{"ref":"${{ github.ref }}","inputs":{"attempt_limit":"$limit","attempt_delay":"$delay"}}' )
          echo $JSON_STRING

          # Create a workflow dispatch event
          # https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            $URL \
            -d $JSON_STRING
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
