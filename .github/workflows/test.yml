name: Delete all untagged container versions

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # Run or on button click
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY_HOST: ghcr.io
  # Use github.repository (<account>/<repo>)
  REPOSITORY_NAME: ${{ github.repository }}
  # Use github.repository_owner (<account>)
  OWNER_NAME: ${{ github.repository_owner }}

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        image:
          - boca-web
        #   - boca-jail

    steps:
      - 
        uses: actions/setup-go@v4
        with:
          go-version: 1.15

      - 
        uses: imjasonh/setup-crane@v0.3
      - 
        run: |

          digestKeys="${digestKeys} `crane manifest ghcr.io/rlaiola/boca-docker/boca-web:builds-focal | jq .manifests[].digest`"
          digestKeys="${digestKeys} `crane manifest ghcr.io/rlaiola/boca-docker/boca-web:builds-jammy | jq .manifests[].digest`"

          # Remove newlines, tabs, carriage returns and double quotes
          digestKeys=$(echo $digestKeys | tr -d "\n\t\r|\"")

          # Replace whitespaces with '|'
          digestKeys="${digestKeys// /|}"

          echo $digestKeys
          echo "DIGESTS=${digestKeys}" >> $GITHUB_ENV

      - 
        name: Write PACKAGE_NAME variable to GITHUB_ENV
        run: |

          owner='${{ env.OWNER_NAME }}'
          repo='${{ env.REPOSITORY_NAME }}'
          # Remove owner from repository name
          package=${repo//$owner\//}
          echo "PACKAGE_NAME=${package}" >> $GITHUB_ENV

      # Delete versions of a package from GitHub Packages
      # https://github.com/marketplace/actions/delete-package-versions
      - 
        name: Delete deprecated Docker images on ghcr.io
        uses: actions/delete-package-versions@v4
        with:
          package-version-ids: '${{ env.DIGESTS }}'
          package-name: '${{ env.PACKAGE_NAME }}/${{ matrix.image }}'
          package-type: 'container'
          token: ${{ secrets.GITHUB_TOKEN }}
